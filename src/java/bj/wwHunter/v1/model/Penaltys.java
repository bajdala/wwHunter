package bj.wwHunter.v1.model;
// Generated 07.04.2015 16:41:45 by Hibernate Tools 3.2.1.GA

import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Penaltys generated by hbm2java
 */
public class Penaltys implements java.io.Serializable {

    private Integer id;
    private int idGamer;
    private Date dateTimeMeeting;
    private String place;
    private PenaltyState status;
    private String stringDate;

    public Penaltys() {
    }

    public Penaltys(int idGamer, Date dateTimeMeeting, String place, PenaltyState status) {
        this.idGamer = idGamer;
        this.dateTimeMeeting = dateTimeMeeting;
        this.place = place;
        this.status = status;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public int getIdGamer() {
        return this.idGamer;
    }

    public void setIdGamer(int idGamer) {
        this.idGamer = idGamer;
    }

    public Date getDateTimeMeeting() {
        return this.dateTimeMeeting;
    }

    public void setDateTimeMeeting(Date dateTimeMeeting) {
        this.dateTimeMeeting = dateTimeMeeting;
    }

    public String getPlace() {
        return this.place;
    }

    public void setPlace(String place) {
        this.place = place;
    }

    public String getStatus() {
        return this.status.toString();
    }

    public void setStatus(String status) {
        this.status = PenaltyState.valueOf(status);
    }

    public PenaltyState getSts() {
        return this.status;
    }

    public void setStatus(PenaltyState status) {
        this.status = status;
    }

    public String getStringDate() {


        SimpleDateFormat df = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");

        if (dateTimeMeeting != null) {
            stringDate = df.format(getDateTimeMeeting());
            return stringDate;
        } else {
            return "";
        }
    }

    public void setStringDate(String stringDate) {
        try {
            setDateTimeMeeting(new SimpleDateFormat("dd.MM.yyyy HH:mm:ss").parse(stringDate));
        } catch (ParseException ex) {
            Logger.getLogger(Penaltys.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    

    @Override
    public String toString() {

        if (dateTimeMeeting != null) {
            String out = getPlace();
            try {
                return getStringDate() + " >>>> " + new String(out.getBytes("latin1"),"cp1251");
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Penaltys.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            return getStringDate() + " >>>> " + out;
        } else {
            return "не назначена";
        }
    }
}
