package bj.wwHunter.v1.model;
// Generated 07.04.2015 16:41:45 by Hibernate Tools 3.2.1.GA

import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Messages generated by hbm2java
 */
public class Messages implements java.io.Serializable {

    private Integer id;
    private int idGamer;
    private int idSender;
    private MessageSenderState sender;
    private Date dateTimeMessage;
    private String textMessage;
    private MessageState statusMessage;
    private String stringDate;
    Map<String, String> vls = new HashMap<String, String>();

    {
        vls.put("IS", "Системное сообщение");
        vls.put("ADMIN", "Администратор");
        vls.put("HUNTER", "Охотник");
        vls.put("VICTIM", "Жертва");
    }
    String messageSender;
    String stringTextMessage;

    public Messages() {
    }

    public Messages(int idGamer, int idSender, MessageSenderState sender, Date dateTimeMessage, String textMessage, MessageState statusMessage) {
        this.idGamer = idGamer;
        this.idSender = idSender;
        this.sender = sender;
        this.dateTimeMessage = dateTimeMessage;
        this.textMessage = textMessage;
        this.statusMessage = statusMessage;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public int getIdGamer() {
        return this.idGamer;
    }

    public void setIdGamer(int idGamer) {
        this.idGamer = idGamer;
    }

    public int getIdSender() {
        return idSender;
    }

    public void setIdSender(int idSender) {
        this.idSender = idSender;
    }

    public String getSender() {
        return this.sender.toString();
    }

    public void setSender(String sender) {
        this.sender = MessageSenderState.valueOf(sender);
    }

    public MessageSenderState getSndr() {
        return this.sender;
    }

    public void setSender(MessageSenderState sender) {
        this.sender = sender;
    }

    public Date getDateTimeMessage() {
        return this.dateTimeMessage;
    }

    public void setDateTimeMessage(Date dateTimeMessage) {
        this.dateTimeMessage = dateTimeMessage;
    }

    public String getTextMessage() {
        return this.textMessage;
    }

    public void setTextMessage(String textMessage) {
        this.textMessage = textMessage;
    }

    public String getStatusMessage() {
        return this.statusMessage.toString();
    }

    public void setStatusMessage(String statusMessage) {
        this.statusMessage = MessageState.valueOf(statusMessage);
    }

    public MessageState getStsMessage() {
        return this.statusMessage;
    }

    public void setStatusMessage(MessageState statusMessage) {
        this.statusMessage = statusMessage;
    }

    public String getStringDate() {


        SimpleDateFormat df = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss");

        stringDate = df.format(getDateTimeMessage());
                
        return stringDate;
    }

    public String getMessageSender() {
        
        messageSender = vls.get(getSender());
        
        return messageSender;
    }

    public String getStringTextMessage() {
        stringTextMessage = getTextMessage();
        try {
            stringTextMessage = new String(stringTextMessage.getBytes("latin1"),"cp1251");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Messages.class.getName()).log(Level.SEVERE, null, ex);
        }
        return stringTextMessage;
    }
    
    
    
    
}
